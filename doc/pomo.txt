*pomo.txt*    a simple, customizable pomodoro timer for Neovim, written in Lua

pomo.nvim

A simple, customizable pomodoro
<https://en.wikipedia.org/wiki/Pomodoro_Technique> timer for Neovim, written in
Lua.


<https://private-user-images.githubusercontent.com/8812459/286793323-1dd96205-8f1e-42c9-9e3e-03d83bed3327.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTEiLCJleHAiOjE3MDEzMTAwMzQsIm5iZiI6MTcwMTMwOTczNCwicGF0aCI6Ii84ODEyNDU5LzI4Njc5MzMyMy0xZGQ5NjIwNS04ZjFlLTQyYzktOWUzZS0wM2Q4M2JlZDMzMjcuZ2lmP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQUlXTkpZQVg0Q1NWRUg1M0ElMkYyMDIzMTEzMCUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyMzExMzBUMDIwMjE0WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZjU3MGFkZDE0MjhmMjUzZDYxYTJjMTNiODFiNjIzOGZiYzgwODU3ZWQ1ZGEwYmQ4OTdjZTg3ZWM5M2EyNTZjOCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.n9crtvMIbnR6A6Dfb_Rd_-ejyo4pSWX8zZ2volOy0hs>


==============================================================================
1. Features                                                    *pomo-features*

- ü™∂ Lightweight and asynchronous
- üíª Written in Lua
- ‚öôÔ∏è Easily customizable and extendable


COMMANDS                                                       *pomo-commands*

- `:TimerStart TIMELIMIT [NAME]` to start a new timer. For example, `:TimerStart 25m Work` to start a timer for 25 minutes called "Work".
- `:TimerStop TIMERID` to stop a running timer by its ID, e.g.¬†`:TimerStop 1`.


==============================================================================
2. Setup                                                          *pomo-setup*

To setup pomo.nvim you just need to call `require("pomo").setup({ ... })` with
the desired options. Here are some examples using different plugin managers.
The full set of |pomo-configuration-options| are listed below.


USING LAZY.NVIM                                         *pomo-using-lazy.nvim*

>lua
    return {
      "epwalsh/pomo.nvim",
      version = "*",  -- Recommended, use latest release instead of latest commit
      lazy = true,
      cmd = { "TimerStart", "TimerStop" },
      dependencies = {
        -- Optional, but highly recommended
        "rcarriga/nvim-notify",
      },
      opts = {
        -- See below for full list of options üëá
      },
    }
<


USING PACKER.NVIM                                     *pomo-using-packer.nvim*

>lua
    use({
      "epwalsh/pomo.nvim",
      tag = "*",  -- Recommended, use latest release instead of latest commit
      requires = {
        -- Optional, but highly recommended
        "rcarriga/nvim-notify",
      },
      config = function()
        require("pomo").setup({
          -- See below for full list of options üëá
        })
      end,
    })
<


==============================================================================
3. Configuration options                          *pomo-configuration-options*

This is a complete list of all of the options that can be passed to
`require("pomo").setup()`. The values represent reasonable defaults, but please
read each option carefully and customize it to your needs:

>lua
    {
      update_interval = 1000,
      -- Configure the notifiers to use for each timer that's created.
      notifiers = {
        -- The "Default" timer uses 'nvim-notify' to continuously display the timer
        {
          name = "Default",
          opts = {
            title_icon = "Û±é´",
            text_icon = "Û∞Ñâ",
            -- Replace the above with these if you don't have a patched font:
            -- title_icon = "‚è≥",
            -- text_icon = "‚è±Ô∏è",
          },
        },
    
        -- The "System" notifier sends a system notification when the timer is finished.
        -- Currently this is only available on MacOS.
        { name = "System" },
    
        -- You can also define custom notifiers by providing an "init" function instead of a name.
        -- See "Defining custom notifiers" below for an example üëá
        -- { init = function(timer_id, time_limit, name) ... end }
      },
    }
<


==============================================================================
4. Defining custom notifiers                  *pomo-defining-custom-notifiers*

To define your own notifier you need to create a Lua `Notifier` class along
with a factory `init` function to construct your notifier. Your `Notifier`
class needs to have the following methods

- `Notifier.start(self)` - Called when the timer starts.
- `Notifier.tick(self, time_left)` - Called periodically (e.g.¬†every second) while the timer is active. The `time_left` argument is the number of seconds left on the timer.
- `Notifier.done(self)` - Called when the timer finishes.
- `Notifier.stop(self)` - Called when the timer is stopped before finishing.

The factory `init` function takes 3 or 4 arguments, the `timer_id` (an
integer), the `time_limit` seconds (an integer), the `name` assigned to the
timer (a string or `nil`), and optionally a table of options from the `opts`
field in the notifier‚Äôs config.

For example, here‚Äôs a simple notifier that just uses `print`:

>lua
    local PrintNotifier = {}
    
    PrintNotifier.new = function(timer_id, time_limit, name, opts)
      local self = setmetatable({}, { __index = PrintNotifier })
      self.timer_id = timer_id
      self.time_limit = time_limit
      self.name = name and name or "Countdown"
      self.opts = opts -- not used
      return self
    end
    
    PrintNotifier.start = function(self)
      print(string.format("Starting timer #%d, %s, for %ds", self.timer_id, self.name, self.time_limit))
    end
    
    PrintNotifier.tick = function(self, time_left)
      print(string.format("Timer #%d, %s, %ds remaining...", self.timer_id, self.name, time_left))
    end
    
    PrintNotifier.done = function(self)
      print(string.format("Timer #%d, %s, complete", self.timer_id, self.name))
    end
    
    PrintNotifier.stop = function(self) end
<

And then in the `notifiers` field of your pomo.nvim config, you‚Äôd add the
following entry:

>lua
      { init = PrintNotifier.new, opts = {} }
<


==============================================================================
5. Contributing                                            *pomo-contributing*

Please see the CONTRIBUTING
<https://github.com/epwalsh/obsidian.nvim/blob/main/.github/CONTRIBUTING.md>
guide from obsidian.nvim <https://github.com/epwalsh/obsidian.nvim> before
submitting a pull request, as this repository is set up and managed in the same
way.

And if you‚Äôre feeling especially generous I always appreciate some coffee
funds! ‚ù§Ô∏è

<https://www.buymeacoffee.com/epwalsh>

==============================================================================
6. Links                                                          *pomo-links*

1. *demo gif*: https://private-user-images.githubusercontent.com/8812459/286793323-1dd96205-8f1e-42c9-9e3e-03d83bed3327.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTEiLCJleHAiOjE3MDEzMTAwMzQsIm5iZiI6MTcwMTMwOTczNCwicGF0aCI6Ii84ODEyNDU5LzI4Njc5MzMyMy0xZGQ5NjIwNS04ZjFlLTQyYzktOWUzZS0wM2Q4M2JlZDMzMjcuZ2lmP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQUlXTkpZQVg0Q1NWRUg1M0ElMkYyMDIzMTEzMCUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyMzExMzBUMDIwMjE0WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZjU3MGFkZDE0MjhmMjUzZDYxYTJjMTNiODFiNjIzOGZiYzgwODU3ZWQ1ZGEwYmQ4OTdjZTg3ZWM5M2EyNTZjOCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.n9crtvMIbnR6A6Dfb_Rd_-ejyo4pSWX8zZ2volOy0hs
2. *BuyMeACoffee*: https://img.shields.io/badge/Buy%20Me%20a%20Coffee-ffdd00?style=for-the-badge&logo=buy-me-a-coffee&logoColor=black

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
